#include <metal_stdlib>

using namespace metal;

uniform float Amplitude = 0.1;

// Generate perlin noise for the given input values. This is done by generating smooth noise at mutiple
// different sizes and adding them together.
float noise3D(float unscaledX, float unscaledY, float unscaledZ)
{
    // Scale the values to force them in the range [0, NOISE_DIM]
    float x = ((unscaledX - teapotMin) / scaleLength) * NOISE_DIM;
    float y = ((unscaledY - teapotMin) / scaleLength) * NOISE_DIM;
    float z = ((unscaledZ - teapotMin) / scaleLength) * NOISE_DIM;

    float value = 0.0f, size = NOISE_SIZE, div = 0.0;

    //Add together smooth noise of increasingly smaller size.
    while(size >= 1.0f)
    {
        value += 1.0f;//smoothNoise(x / size, y / size, z / size) * size;
        div += size;
        size /= 2.0f;
    }
    value /= div;

    return value;
};

//_geometry.position += (Amplitude*_geometry.position.y*_geometry.position.x) * sin(1.0 * u_time);
